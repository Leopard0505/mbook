<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rest.api.mbook.repository.BookMapper">
    <resultMap id="book" type="com.rest.api.mbook.entity.Book">
        <id property="book_id" column="book_book_id" />
        <result property="title" column="book_title" />
        <result property="original_author" column="book_original_author" />
        <result property="drawer" column="book_drawer" />
        <result property="publisher" column="book_publisher" />
        <result property="created_user" column="book_created_user" />
        <result property="updated_user" column="book_updated_user" />
        <collection property="bookInfos" ofType="com.rest.api.mbook.entity.BookInfo">
            <id property="book_info_id" column="book_info_book_info_id" />
            <result property="book_id" column="book_info_book_id" />
            <result property="title" column="book_info_title" />
            <result property="release_date" column="book_info_release_date" />
            <result property="created_user" column="book_info_created_user" />
            <result property="updated_user" column="book_info_updated_user" />
        </collection>
    </resultMap>
    <select id="findAll" resultMap="book">
        SELECT
            books.book_id             AS book_book_id,
            books.title               AS book_title,
            books.original_author     AS book_original_author,
            books.drawer              AS book_drawer,
            books.publisher           AS book_publisher,
            books.created_user        AS book_created_user,
            books.updated_user        AS book_updated_user,
            book_info.book_info_id    AS book_info_book_info_id,
            book_info.book_id         AS book_info_book_id,
            book_info.title           AS book_info_title,
            book_info.release_date    AS book_info_release_date,
            book_info.created_user    AS book_info_created_user,
            book_info.updated_user    AS book_info_updated_user
        FROM books
            INNER JOIN user_books ON books.book_id = user_books.book_id
            LEFT OUTER JOIN book_info ON books.book_id = book_info.book_id
        WHERE user_books.user_id = #{user_id}
        <if test="title != null">
            AND books.title LIKE CONCAT('%', #{title}, '%')
        </if>
        ORDER BY book_info.release_date
    </select>
    <insert id="create" useGeneratedKeys="true" keyProperty="book_id">
        INSERT INTO
            books(title, original_author, drawer, publisher, created_user, updated_user)
        VALUES (
            #{title}, #{original_author}, #{drawer}, #{publisher}, #{created_user}, #{updated_user}
        )
    </insert>
    <insert id="createUserBooks" useGeneratedKeys="true">
        INSERT INTO
            user_books(user_id, book_id, created_user, updated_user)
        VALUES (
            #{user.user_id}, #{book.book_id}, #{book.created_user}, #{book.updated_user}
        )
    </insert>
    <insert id="register" useGeneratedKeys="true" keyProperty="book_info_id">
        INSERT INTO
            book_info(book_id, title, release_date, special_edition, created_user, updated_user)
        VALUES (
            #{book_id}, #{title}, #{release_date}, #{special_edition}, #{created_user}, #{updated_user}
        )
    </insert>
</mapper>